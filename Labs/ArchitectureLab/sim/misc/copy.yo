                            | # Execution begins at address 0
0x000:                      | 	.pos 0
0x000: 30f40002000000000000 | 	irmovq stack, %rsp  	# Set up stack pointer
0x00a: 804800000000000000   | 	call main		# Execute main program
0x013: 00                   | 	halt			# Terminate program
                            | 
0x018:                      | .align 8
                            | # Source block
0x018:                      | src:
0x018: 0a00000000000000     |     .quad 0x00a
0x020: b000000000000000     |     .quad 0x0b0
0x028: 000c000000000000     |     .quad 0xc00
                            | # Destination
0x030:                      | dest:
0x030: 1101000000000000     |     .quad 0x111
0x038: 2202000000000000     |     .quad 0x222
0x040: 3303000000000000     |     .quad 0x333
                            | 
                            | 
                            | 
                            | 
                            | 
0x048: 30f71800000000000000 | main:	irmovq src,%rdi
0x052: 30f63000000000000000 |         irmovq dest, %rsi
0x05c: 30f20300000000000000 |         irmovq $3, %rdx
0x066: 807000000000000000   |     	call copy_block
0x06f: 90                   |     	ret
                            | 
0x070:                      | copy_block:
0x070: 30f00000000000000000 | 	irmovq	$0, %rax
0x07a: 70c500000000000000   | 	jmp	L10
0x083:                      | L11:
0x083: 50170000000000000000 | 	mrmovq	(%rdi), %rcx
0x08d: 40160000000000000000 | 	rmmovq	%rcx, (%rsi)
0x097: 6310                 | 	xorq	%rcx, %rax
0x099: 30f80100000000000000 |     irmovq  $1, %r8
0x0a3: 6182                 | 	subq	%r8, %rdx
                            | 
                            | 	#leaq	8(%rsi), %rsi
0x0a5: a00f                 |     pushq %rax        # save eax which used as temporary for adding the offset
0x0a7: 30f00800000000000000 |     irmovq $8, %rax
0x0b1: 6006                 |     addq %rax, %rsi
0x0b3: b00f                 |     popq %rax         # restore eax
                            | 
                            | 	#leaq	8(%rdi), %rdi
0x0b5: a00f                 |     pushq %rax        # save eax which used as temporary for adding the offset
0x0b7: 30f00800000000000000 |     irmovq $8, %rax
0x0c1: 6007                 |     addq %rax, %rdi
0x0c3: b00f                 |     popq %rax         # restore eax
0x0c5:                      | L10:
0x0c5: 6222                 | 	andq	%rdx, %rdx
0x0c7: 768300000000000000   | 	jg	L11
0x0d0: 90                   | 	ret
                            | 
                            | 
                            | 
                            | 
                            | # Stack starts here and grows to lower addresses
0x200:                      | 	.pos 0x200
0x200:                      | stack:
